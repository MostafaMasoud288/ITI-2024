LIBRARY IEEE;
LIBRARY WORK;
LIBRARY std;

USE IEEE.STD_LOGIC_1164.ALL;
USE ieee.numeric_bit.ALL;
USE IEEE.std_logic_arith.all;
USE IEEE.numeric_std.all;
USE IEEE.std_logic_signed.all;


ENTITY Adder_Sub IS
PORT( A,B:IN std_logic_vector(3 DOWNTO 0);
      M: IN std_logic;
      Sum :OUT std_logic_vector(3 DOWNTO 0);
      Cout :OUT std_logic);

END ENTITY Adder_Sub;

ARCHITECTURE Struct OF Adder_Sub IS
SIGNAL B_XORED : std_logic_vector(3 DOWNTO 0);
SIGNAL carry_int : std_logic_vector(2 DOWNTO 0);

COMPONENT FA IS
PORT ( A,B:IN std_logic_vector(3 DOWNTO 0);
      Cin: IN std_logic;
      Sum :OUT std_logic_vector(3 DOWNTO 0);
      Cout :OUT std_logic);

END COMPONENT FA;

FOR ALL:FA ENTITY USE WORK.FA (FA_struct);
BEGIN
B_XORED(0) <= B(0) XOR M;
B_XORED(1) <= B(1) XOR M;
B_XORED(2) <= B(2) XOR M;
B_XORED(3) <= B(3) XOR M;
ADD_SUB0:FA
PORT MAP (A => A(0),B => B_XORED(0),Cin => M,Sum(0),Cout => carry_int(0));

ADD_SUB1:FA
PORT MAP (A => A(1),B => B_XORED(1),Cin => carry_int(0),Sum(1),Cout => carry_int(1));

ADD_SUB2:FA
PORT MAP (A => A(2),B => B_XORED(2),Cin => carry_int(1), Sum(2),Cout => carry_int(2));

ADD_SUB3:FA
PORT MAP ( A =>A (3), B => B_XORED(3),Cin => carry_int(2), Sum(3),Cout => Cout);
 

END ARCHITECTURE Struct;

